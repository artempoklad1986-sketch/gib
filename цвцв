<?php
require_once '../functions.php';
initSession();

// –û–±—Ä–∞–±–æ—Ç–∫–∞ AJAX –∑–∞–ø—Ä–æ—Å–æ–≤ –∞–¥–º–∏–Ω–∫–∏ (–≤–∫–ª—é—á–∞—è –ò–ò)
if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['action'])) {
    header('Content-Type: application/json; charset=utf-8');

    try {
        switch ($_POST['action']) {
            case 'delete_product':
                $id = (int)($_POST['id'] ?? 0);
                $result = deleteProduct($id);
                echo json_encode([
                    'success' => $result,
                    'message' => $result ? '–¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω' : '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞'
                ]);
                break;

            case 'update_order_status':
                $id = (int)($_POST['id'] ?? 0);
                $status = trim($_POST['status'] ?? '');
                $result = updateOrderStatus($id, $status);
                echo json_encode([
                    'success' => $result,
                    'message' => $result ? '–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω' : '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞'
                ]);
                break;

            case 'delete_category':
                $id = (int)($_POST['id'] ?? 0);
                $result = deleteCategory($id);
                echo json_encode([
                    'success' => $result,
                    'message' => $result ? '–ö–∞—Ç–µ–≥–æ—Ä–∏—è —É–¥–∞–ª–µ–Ω–∞' : '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏'
                ]);
                break;

            // ========== –ò–ò –î–ï–ô–°–¢–í–ò–Ø ==========
            case 'export_ai_data':
                $data = exportAILearningData();
                header('Content-Type: application/json');
                header('Content-Disposition: attachment; filename="ai_learning_export_' . date('Y-m-d') . '.json"');
                echo json_encode($data, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE);
                exit;

            case 'import_ai_data':
                if (isset($_FILES['ai_file'])) {
                    $uploadedData = json_decode(file_get_contents($_FILES['ai_file']['tmp_name']), true);
                    $result = importAILearningData($uploadedData);
                    echo json_encode([
                        'success' => $result,
                        'message' => $result ? '–î–∞–Ω–Ω—ã–µ –ò–ò —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã!' : '–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –ò–ò'
                    ]);
                } else {
                    echo json_encode(['success' => false, 'message' => '–§–∞–π–ª –Ω–µ –±—ã–ª –∑–∞–≥—Ä—É–∂–µ–Ω']);
                }
                break;

            case 'reset_ai_data':
                saveJsonData('ai_learning.json', [
                    'successful_generations' => [],
                    'user_preferences' => [],
                    'popular_combinations' => [],
                    'pricing_patterns' => [],
                    'seo_success_rates' => []
                ]);
                saveJsonData('ai_user_actions.json', []);
                echo json_encode([
                    'success' => true,
                    'message' => '–î–∞–Ω–Ω—ã–µ –æ–±—É—á–µ–Ω–∏—è –ò–ò —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω—ã!'
                ]);
                break;

            case 'get_ai_stats':
                $aiStats = getAIAdminStats();
                $performanceData = getAIPerformanceAnalysis();
                echo json_encode([
                    'success' => true,
                    'ai_stats' => $aiStats,
                    'performance' => $performanceData
                ]);
                break;

            default:
                echo json_encode(['success' => false, 'message' => '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ']);
                break;
        }
    } catch (Exception $e) {
        error_log('–û—à–∏–±–∫–∞ –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏: ' . $e->getMessage());
        echo json_encode(['success' => false, 'message' => '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞']);
    }
    exit;
}

// –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
try {
    $stats = getDashboardStats();
    $page = trim($_GET['page'] ?? 'dashboard');

    // –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–¥–æ–±–∞–≤–ª–µ–Ω ai_dashboard)
    $allowedPages = [
        'dashboard', 'products', 'add_product', 'product_editor', 'categories',
        'orders', 'statistics', 'settings', 'news_mega_system', 'reviews',
        'slider', 'plant_constructor', 'plant_library', 'ai_dashboard'
    ];

    if (!in_array($page, $allowedPages)) {
        $page = 'dashboard';
    }

    // –ü–æ–ª—É—á–∞–µ–º –ò–ò –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–∞—à–±–æ—Ä–¥–∞
    $aiStats = getAIAdminStats();
    $performanceData = getAIPerformanceAnalysis();
} catch (Exception $e) {
    error_log('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–¥–º–∏–Ω –¥–∞–Ω–Ω—ã—Ö: ' . $e->getMessage());
    $stats = [
        'total_products' => 0, 'total_categories' => 0, 'total_orders' => 0,
        'today_orders' => 0, 'month_orders' => 0, 'total_revenue' => 0, 'month_revenue' => 0
    ];
    $aiStats = ['total_generations' => 0, 'successful_generations' => 0, 'learning_entries' => 0, 'knowledge_base_size' => 0, 'last_learning' => 0];
    $performanceData = ['efficiency_score' => 0, 'accuracy_score' => 0, 'overall_rating' => 0];
    $page = 'dashboard';
}
?>
<!DOCTYPE html>
<html lang='ru'>
<head>
    <meta charset='UTF-8'>
    <meta name='viewport' content='width=device-width, initial-scale=1.0'>
    <title>ü§ñ –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å —Å –ò–ò - –ê–∫–≤–∞–°–±–æ—Ä</title>
    <link href='https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css' rel='stylesheet'>
    <link href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css' rel='stylesheet'>
    <link href='https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap' rel='stylesheet'>

    <style>
        * { font-family: 'Inter', sans-serif; }

        .sidebar {
            height: 100vh;
            background: linear-gradient(135deg, #0EA5E9 0%, #10B981 100%);
            position: fixed;
            top: 0;
            left: 0;
            width: 250px;
            overflow-y: auto;
            z-index: 1000;
            box-shadow: 2px 0 10px rgba(0,0,0,0.1);
        }

        .sidebar .nav-link {
            color: rgba(255, 255, 255, 0.8);
            padding: 12px 20px;
            margin: 2px 10px;
            border-radius: 8px;
            transition: all 0.3s ease;
            font-weight: 500;
            text-decoration: none;
        }

        .sidebar .nav-link:hover,
        .sidebar .nav-link.active {
            color: white;
            background-color: rgba(255, 255, 255, 0.15);
            transform: translateX(5px);
        }

        .sidebar .nav-link.ai-special {
            background: linear-gradient(135deg, rgba(255,215,0,0.3) 0%, rgba(255,165,0,0.3) 100%);
            border: 1px solid rgba(255,215,0,0.5);
            margin: 5px 10px;
            position: relative;
            overflow: hidden;
        }

        .sidebar .nav-link.ai-special::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
            transition: left 0.5s ease;
        }

        .sidebar .nav-link.ai-special:hover::before {
            left: 100%;
        }

        .main-content {
            margin-left: 250px;
            padding: 2rem;
            min-height: 100vh;
            background: #F8FAFC;
        }

        .logo {
            color: white;
            font-size: 1.25rem;
            font-weight: 700;
            padding: 1.5rem;
            text-align: center;
            border-bottom: 1px solid rgba(255, 255, 255, 0.2);
            margin-bottom: 1rem;
        }

        .stat-card {
            border: none;
            border-radius: 12px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
            transition: all 0.3s ease;
            overflow: hidden;
        }

        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
        }

        .stat-icon {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            color: white;
            margin-bottom: 1rem;
        }

        .bg-gradient-primary { background: linear-gradient(135deg, #0EA5E9 0%, #0284C7 100%); }
        .bg-gradient-success { background: linear-gradient(135deg, #10B981 0%, #059669 100%); }
        .bg-gradient-info { background: linear-gradient(135deg, #06B6D4 0%, #0891B2 100%); }
        .bg-gradient-warning { background: linear-gradient(135deg, #F59E0B 0%, #D97706 100%); }
        .bg-gradient-danger { background: linear-gradient(135deg, #EF4444 0%, #DC2626 100%); }
        .bg-gradient-ai { background: linear-gradient(135deg, #8B5CF6 0%, #06B6D4 100%); }

        .table-hover tbody tr:hover {
            background-color: rgba(14, 165, 233, 0.05);
        }

        .btn { border-radius: 8px; }
        .btn-action { padding: 5px 10px; margin: 2px; }

        .page-header {
            background: white;
            border-radius: 12px;
            padding: 1.5rem;
            margin-bottom: 2rem;
            box-shadow: 0 2px 8px rgba(0,0,0,0.08);
        }

        .content-card {
            background: white;
            border-radius: 12px;
            padding: 1.5rem;
            box-shadow: 0 2px 8px rgba(0,0,0,0.08);
            border: 1px solid #E2E8F0;
        }

        .ai-widget {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 15px;
            padding: 1rem;
            margin-bottom: 1rem;
            position: relative;
            overflow: hidden;
        }

        .ai-widget::before {
            content: '';
            position: absolute;
            top: -50%;
            right: -50%;
            width: 100%;
            height: 100%;
            background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 70%);
            animation: aiPulse 3s ease-in-out infinite;
        }

        @keyframes aiPulse {
            0%, 100% { transform: scale(1) rotate(0deg); opacity: 0.3; }
            50% { transform: scale(1.1) rotate(180deg); opacity: 0.7; }
        }

        .ai-status {
            display: inline-flex;
            align-items: center;
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 0.8rem;
            font-weight: 500;
        }

        .ai-status.online {
            background: rgba(34, 197, 94, 0.2);
            color: #059669;
        }

        .progress-ai {
            height: 6px;
            border-radius: 3px;
            background: rgba(255,255,255,0.2);
            overflow: hidden;
        }

        .progress-ai .progress-bar {
            background: linear-gradient(90deg, #FFD700, #FFA500);
            border-radius: 3px;
            transition: width 0.3s ease;
        }

        /* Responsive */
        @media (max-width: 768px) {
            .sidebar {
                transform: translateX(-100%);
                transition: transform 0.3s ease;
            }
            .sidebar.show {
                transform: translateX(0);
            }
            .main-content {
                margin-left: 0;
                padding: 1rem;
            }
        }
    </style>
</head>
<body>
    <!-- Sidebar -->
    <div class='sidebar' id='sidebar'>
        <div class='logo'>
            <i class='fas fa-fish'></i> –ê–∫–≤–∞–ê–¥–º–∏–Ω
            <div class='ai-status online mt-2'>
                <i class='fas fa-circle me-1'></i>ü§ñ –ò–ò –ê–∫—Ç–∏–≤–µ–Ω
            </div>
        </div>
        <nav class='nav flex-column'>
            <a class='nav-link <?= $page == 'dashboard' ? 'active' : '' ?>' href='?page=dashboard'>
                <i class='fas fa-tachometer-alt me-2'></i> –î–∞—à–±–æ—Ä–¥
                <?php if ($page == 'dashboard'): ?>
                    <small class='d-block text-white-50 mt-1'>—Å –ò–ò –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π</small>
                <?php endif; ?>
            </a>

            <!-- –ò–ò –£–ü–†–ê–í–õ–ï–ù–ò–ï - –°–ü–ï–¶–ò–ê–õ–¨–ù–ê–Ø –°–°–´–õ–ö–ê -->
            <a class='nav-link ai-special <?= $page == 'ai_dashboard' ? 'active' : '' ?>' href='?page=ai_dashboard'>
                <i class='fas fa-robot me-2'></i>ü§ñ –ò–ò –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
                <small class='d-block mt-1'>
                    <?= $aiStats['total_generations'] ?> –≥–µ–Ω–µ—Ä–∞—Ü–∏–π | <?= round($performanceData['overall_rating'] ?? 0, 1) ?>/10
                </small>
            </a>

            <a class='nav-link <?= $page == 'products' ? 'active' : '' ?>' href='?page=products'>
                <i class='fas fa-fish me-2'></i> –¢–æ–≤–∞—Ä—ã
            </a>
            <a class='nav-link <?= $page == 'add_product' ? 'active' : '' ?>' href='?page=add_product'>
                <i class='fas fa-plus me-2'></i> –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä
                <small class='d-block text-white-50 mt-1'>—Å –ò–ò –ø–æ–º–æ—â–Ω–∏–∫–æ–º</small>
            </a>
            <a class='nav-link <?= $page == 'product_editor' ? 'active' : '' ?>' href='?page=product_editor'>
                <i class='fas fa-edit me-2'></i> –†–µ–¥–∞–∫—Ç–æ—Ä —Ç–æ–≤–∞—Ä–æ–≤
            </a>
            <a class='nav-link <?= $page == 'categories' ? 'active' : '' ?>' href='?page=categories'>
                <i class='fas fa-tags me-2'></i> –ö–∞—Ç–µ–≥–æ—Ä–∏–∏
            </a>
            <a class='nav-link <?= $page == 'orders' ? 'active' : '' ?>' href='?page=orders'>
                <i class='fas fa-shopping-cart me-2'></i> –ó–∞–∫–∞–∑—ã
            </a>
            <a class='nav-link <?= $page == 'news_mega_system' ? 'active' : '' ?>' href='/admin/pages/news_mega_system.php'>
                <i class='fas fa-newspaper me-2'></i> –ù–æ–≤–æ—Å—Ç–∏
            </a>
            <a class='nav-link <?= $page == 'reviews' ? 'active' : '' ?>' href='?page=reviews'>
                <i class='fas fa-star me-2'></i> –û—Ç–∑—ã–≤—ã
            </a>
            <a class='nav-link <?= $page == 'slider' ? 'active' : '' ?>' href='?page=slider'>
                <i class='fas fa-images me-2'></i> –°–ª–∞–π–¥–µ—Ä
            </a>
            <a class='nav-link <?= $page == 'statistics' ? 'active' : '' ?>' href='?page=statistics'>
                <i class='fas fa-chart-bar me-2'></i> –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            </a>
            <a class='nav-link <?= $page == 'plant_constructor' ? 'active' : '' ?>' href='?page=plant_constructor'>
                <i class='fas fa-seedling me-2'></i> –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –Ω–∞–±–æ—Ä–æ–≤ —Ä–∞—Å—Ç–µ–Ω–∏–π
            </a>
            <a class='nav-link <?= $page == 'plant_library' ? 'active' : '' ?>' href='?page=plant_library'>
                <i class='fas fa-leaf me-2'></i> –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ —Ä–∞—Å—Ç–µ–Ω–∏–π
            </a>
            <a class='nav-link <?= $page == 'settings' ? 'active' : '' ?>' href='?page=settings'>
                <i class='fas fa-cog me-2'></i> –ù–∞—Å—Ç—Ä–æ–π–∫–∏
            </a>
            <hr style='border-color: rgba(255, 255, 255, 0.2); margin: 1rem;'>
            <a class='nav-link' href='../index.php' target='_blank'>
                <i class='fas fa-external-link-alt me-2'></i> –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–∞–π—Ç
            </a>
        </nav>
    </div>

    <!-- Main Content -->
    <div class='main-content'>
        <!-- Mobile menu toggle -->
        <button class='btn btn-primary d-md-none mb-3' type='button' onclick='toggleSidebar()'>
            <i class='fas fa-bars'></i> –ú–µ–Ω—é
        </button>

        <?php
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü
        if ($page === 'ai_dashboard') {
            // ========== –ò–ò –î–ê–®–ë–û–†–î –í–°–¢–†–û–ï–ù –ü–†–Ø–ú–û –°–Æ–î–ê ==========
            ?>
            <div class="page-header">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h1><i class="fas fa-robot me-2 text-primary"></i>ü§ñ –ú–µ–≥–∞ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ò–ò</h1>
                        <p class="text-muted mb-0">–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –ê–∫–≤–∞–°–±–æ—Ä - –ø–æ–ª–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</p>
                    </div>
                    <div class="d-flex align-items-center gap-3">
                        <div class="ai-status online">
                            <i class="fas fa-circle me-1"></i>–ò–ò –ê–∫—Ç–∏–≤–µ–Ω
                        </div>
                        <button class="btn btn-primary" onclick="refreshAIStats()">
                            <i class="fas fa-sync me-1"></i>–û–±–Ω–æ–≤–∏—Ç—å
                        </button>
                    </div>
                </div>
            </div>

            <!-- –ò–ò –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ -->
            <div class="row mb-4">
                <div class="col-xl-3 col-md-6 mb-4">
                    <div class="card stat-card h-100">
                        <div class="card-body text-center">
                            <div class="stat-icon bg-gradient-ai mx-auto">
                                <i class="fas fa-brain"></i>
                            </div>
                            <h3 class="text-dark"><?= $aiStats['total_generations'] ?></h3>
                            <p class="text-muted mb-0">–í—Å–µ–≥–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–π</p>
                            <small class="text-success">
                                –£—Å–ø–µ—à–Ω—ã—Ö: <?= $aiStats['successful_generations'] ?>
                            </small>
                        </div>
                    </div>
                </div>

                <div class="col-xl-3 col-md-6 mb-4">
                    <div class="card stat-card h-100">
                        <div class="card-body text-center">
                            <div class="stat-icon bg-gradient-success mx-auto">
                                <i class="fas fa-graduation-cap"></i>
                            </div>
                            <h3 class="text-dark"><?= $aiStats['learning_entries'] ?></h3>
                            <p class="text-muted mb-0">–ó–∞–ø–∏—Å–µ–π –æ–±—É—á–µ–Ω–∏—è</p>
                            <small class="text-info">
                                –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π: <?= $aiStats['knowledge_base_size'] ?> —ç–ª–µ–º–µ–Ω—Ç–æ–≤
                            </small>
                        </div>
                    </div>
                </div>

                <div class="col-xl-3 col-md-6 mb-4">
                    <div class="card stat-card h-100">
                        <div class="card-body text-center">
                            <div class="stat-icon bg-gradient-info mx-auto">
                                <i class="fas fa-chart-line"></i>
                            </div>
                            <h3 class="text-dark"><?= round($performanceData['efficiency_score'] ?? 0, 1) ?>%</h3>
                            <p class="text-muted mb-0">–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ò–ò</p>
                            <small class="text-success">
                                –¢–æ—á–Ω–æ—Å—Ç—å: <?= round($performanceData['accuracy_score'] ?? 0, 1) ?>%
                            </small>
                        </div>
                    </div>
                </div>

                <div class="col-xl-3 col-md-6 mb-4">
                    <div class="card stat-card h-100">
                        <div class="card-body text-center">
                            <div class="stat-icon bg-gradient-warning mx-auto">
                                <i class="fas fa-trophy"></i>
                            </div>
                            <h3 class="text-dark"><?= round($performanceData['overall_rating'] ?? 0, 1) ?>/10</h3>
                            <p class="text-muted mb-0">–û–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥ –ò–ò</p>
                            <small class="<?= ($performanceData['overall_rating'] ?? 0) >= 7 ? 'text-success' : 'text-warning' ?>">
                                <?php 
                                $rating = $performanceData['overall_rating'] ?? 0;
                                if ($rating >= 9) echo '–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ';
                                elseif ($rating >= 7) echo '–û—Ç–ª–∏—á–Ω–æ';
                                elseif ($rating >= 5) echo '–•–æ—Ä–æ—à–æ';
                                else echo '–£–ª—É—á—à–∞–µ—Ç—Å—è';
                                ?>
                            </small>
                        </div>
                    </div>
                </div>
            </div>

            <!-- –ò–ò –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ -->
            <div class="row">
                <div class="col-lg-6 mb-4">
                    <div class="card content-card h-100">
                        <div class="card-header bg-gradient-primary text-white">
                            <h5 class="mb-0">
                                <i class="fas fa-cogs me-2"></i>üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ò–ò
                            </h5>
                        </div>
                        <div class="card-body">
                            <div class="mb-4">
                                <h6>–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –æ–±—É—á–µ–Ω–∏—è</h6>
                                <p class="text-muted small">–°–∫–∞—á–∞—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –æ–±—É—á–µ–Ω–∏—è –ò–ò –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è</p>
                                <button type="button" class="btn btn-success" onclick="exportAIData()">
                                    <i class="fas fa-download me-1"></i>–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
                                </button>
                            </div>

                            <div class="mb-4">
                                <h6>–ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –æ–±—É—á–µ–Ω–∏—è</h6>
                                <p class="text-muted small">–ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ–±—É—á–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞</p>
                                <div class="input-group">
                                    <input type="file" class="form-control" id="aiFileInput" accept=".json">
                                    <button type="button" class="btn btn-primary" onclick="importAIData()">
                                        <i class="fas fa-upload me-1"></i>–ò–º–ø–æ—Ä—Ç
                                    </button>
                                </div>
                            </div>

                            <div class="mb-0">
                                <h6 class="text-danger">–°–±—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –æ–±—É—á–µ–Ω–∏—è</h6>
                                <p class="text-muted small">–ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –æ–±—É—á–µ–Ω–∏—è –ò–ò</p>
                                <button type="button" class="btn btn-danger" onclick="confirmResetAI()">
                                    <i class="fas fa-trash me-1"></i>–°–±—Ä–æ—Å–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- –ò–ò –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å -->
                <div class="col-lg-6 mb-4">
                    <div class="card content-card h-100">
                        <div class="card-header bg-gradient-info text-white">
                            <h5 class="mb-0">
                                <i class="fas fa-chart-bar me-2"></i>üìä –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ò–ò
                            </h5>
                        </div>
                        <div class="card-body">
                            <div class="mb-3">
                                <div class="d-flex justify-content-between align-items-center mb-2">
                                    <span>–ö–∞—á–µ—Å—Ç–≤–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏</span>
                                    <span class="badge bg-success"><?= round($performanceData['quality_score'] ?? 85, 1) ?>%</span>
                                </div>
                                <div class="progress-ai">
                                    <div class="progress-bar" style="width: <?= $performanceData['quality_score'] ?? 85 ?>%"></div>
                                </div>
                            </div>

                            <div class="mb-3">
                                <div class="d-flex justify-content-between align-items-center mb-2">
                                    <span>–°–∫–æ—Ä–æ—Å—Ç—å –æ–±—É—á–µ–Ω–∏—è</span>
                                    <span class="badge bg-info"><?= round($performanceData['learning_speed'] ?? 78, 1) ?>%</span>
                                </div>
                                <div class="progress-ai">
                                    <div class="progress-bar" style="width: <?= $performanceData['learning_speed'] ?? 78 %>%"></div>
                                </div>
                            </div>

                            <div class="mb-3">
                                <div class="d-flex justify-content-between align-items-center mb-2">
                                    <span>–¢–æ—á–Ω–æ—Å—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π</span>
                                    <span class="badge bg-warning"><?= round($performanceData['recommendation_accuracy'] ?? 82, 1) ?>%</span>
                                </div>
                                <div class="progress-ai">
                                    <div class="progress-bar" style="width: <?= $performanceData['recommendation_accuracy'] ?? 82 %>%"></div>
                                </div>
                            </div>

                            <hr>

                            <div class="text-center">
                                <div class="ai-widget">
                                    <h6 class="mb-2">üß† –ò–ò –°—Ç–∞—Ç—É—Å</h6>
                                    <div class="h5 mb-2">
                                        –û–±—É—á–µ–Ω–∏–µ: <span class="text-warning">–ê–∫—Ç–∏–≤–Ω–æ</span>
                                    </div>
                                    <small>
                                        –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±—É—á–µ–Ω–∏–µ: 
                                        <?= $aiStats['last_learning'] ? date('d.m.Y H:i', $aiStats['last_learning']) : '–ù–∏–∫–æ–≥–¥–∞' ?>
                                    </small>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- –ò–ò –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π -->
            <div class="row">
                <div class="col-12 mb-4">
                    <div class="card content-card">
                        <div class="card-header bg-gradient-success text-white">
                            <div class="d-flex justify-content-between align-items-center">
                                <h5 class="mb-0">
                                    <i class="fas fa-database me-2"></i>üß† –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –ò–ò
                                </h5>
                                <button class="btn btn-sm btn-light" onclick="toggleKnowledgeBase()">
                                    <i class="fas fa-eye me-1"></i>–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏
                                </button>
                            </div>
                        </div>
                        <div class="card-body" id="knowledgeBaseDetails" style="display: none;">
                            <div class="row">
                                <div class="col-md-3 mb-3">
                                    <div class="text-center p-3 bg-light rounded">
                                        <i class="fas fa-seedling fa-2x text-success mb-2"></i>
                                        <h6>–†–∞—Å—Ç–µ–Ω–∏—è</h6>
                                        <span class="badge bg-success">45+ –≤–∏–¥–æ–≤</span>
                                        <div class="small text-muted mt-1">–ü–æ–ª–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</div>
                                    </div>
                                </div>
                                <div class="col-md-3 mb-3">
                                    <div class="text-center p-3 bg-light rounded">
                                        <i class="fas fa-fish fa-2x text-info mb-2"></i>
                                        <h6>–†—ã–±–∫–∏</h6>
                                        <span class="badge bg-info">32+ –≤–∏–¥–∞</span>
                                        <div class="small text-muted mt-1">–£—Å–ª–æ–≤–∏—è —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è</div>
                                    </div>
                                </div>
                                <div class="col-md-3 mb-3">
                                    <div class="text-center p-3 bg-light rounded">
                                        <i class="fas fa-cog fa-2x text-warning mb-2"></i>
                                        <h6>–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ</h6>
                                        <span class="badge bg-warning">28+ —Ç–∏–ø–æ–≤</span>
                                        <div class="small text-muted mt-1">–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ</div>
                                    </div>
                                </div>
                                <div class="col-md-3 mb-3">
                                    <div class="text-center p-3 bg-light rounded">
                                        <i class="fas fa-gem fa-2x text-danger mb-2"></i>
                                        <h6>–î–µ–∫–æ—Ä</h6>
                                        <span class="badge bg-danger">21+ —Ç–∏–ø</span>
                                        <div class="small text-muted mt-1">–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å</div>
                                    </div>
                                </div>
                            </div>

                            <div class="mt-4">
                                <h6>üî• –¢–æ–ø –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ (–∏–∑—É—á–µ–Ω—ã –ò–ò)</h6>
                                <div class="d-flex flex-wrap gap-2">
                                    <span class="badge bg-primary fs-6">üåø –ê–Ω—É–±–∏–∞—Å + –Ø–≤–∞–Ω—Å–∫–∏–π –º–æ—Ö</span>
                                    <span class="badge bg-success fs-6">üê† –ù–µ–æ–Ω + –ñ–∏–≤—ã–µ —Ä–∞—Å—Ç–µ–Ω–∏—è</span>
                                    <span class="badge bg-info fs-6">üí° LED + CO2 —Å–∏—Å—Ç–µ–º–∞</span>
                                    <span class="badge bg-warning fs-6">‚öôÔ∏è –§–∏–ª—å—Ç—Ä + –û–±–æ–≥—Ä–µ–≤–∞—Ç–µ–ª—å</span>
                                    <span class="badge bg-danger fs-6">üèÜ –ö—É–±–∞ + –ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ</span>
                                </div>
                            </div>

                            <div class="mt-4">
                                <h6>üìà –ò–ò –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</h6>
                                <div class="row text-center">
                                    <div class="col-3">
                                        <div class="h4 text-primary"><?= $aiStats['total_generations'] ?></div>
                                        <div class="small text-muted">–ì–µ–Ω–µ—Ä–∞—Ü–∏–π</div>
                                    </div>
                                    <div class="col-3">
                                        <div class="h4 text-success"><?= round(($aiStats['successful_generations'] / max($aiStats['total_generations'], 1)) * 100, 1) ?>%</div>
                                        <div class="small text-muted">–£—Å–ø–µ—à–Ω–æ—Å—Ç—å</div>
                                    </div>
                                    <div class="col-3">
                                        <div class="h4 text-info"><?= $aiStats['learning_entries'] ?></div>
                                        <div class="small text-muted">–û–±—É—á–µ–Ω–∏–π</div>
                                    </div>
                                    <div class="col-3">
                                        <div class="h4 text-warning"><?= round($performanceData['overall_rating'] ?? 0, 1) ?></div>
                                        <div class="small text-muted">–†–µ–π—Ç–∏–Ω–≥</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <?php
        } elseif (file_exists("pages/{$page}.php")) {
            include "pages/{$page}.php";
        } else {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–∞–∑–æ–≤—ã–π –¥–∞—à–±–æ—Ä–¥ –µ—Å–ª–∏ —Ñ–∞–π–ª —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω
            ?>
            <div class='page-header'>
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h1><i class='fas fa-tachometer-alt me-2 text-primary'></i>ü§ñ –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ê–∫–≤–∞–°–±–æ—Ä</h1>
                        <p class='text-muted mb-0'>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—É—é –ø–∞–Ω–µ–ª—å —Å –ò–ò</p>
                    </div>
                    <div class="ai-widget text-center" style="min-width: 200px;">
                        <div class="small mb-1">–ò–ò –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</div>
                        <div class="h5 mb-1"><?= round($performanceData['efficiency_score'] ?? 0, 1) ?>%</div>
                        <div class="progress-ai">
                            <div class="progress-bar" style="width: <?= $performanceData['efficiency_score'] ?? 0 ?>%"></div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Quick Stats —Å –ò–ò –¥–∞–Ω–Ω—ã–º–∏ -->
            <div class='row mb-4'>
                <div class='col-xl-3 col-md-6 mb-4'>
                    <div class='card stat-card h-100'>
                        <div class='card-body text-center'>
                            <div class='stat-icon bg-gradient-primary mx-auto'>
                                <i class='fas fa-fish'></i>
                            </div>
                            <h3 class='text-dark'><?= $stats['total_products'] ?></h3>
                            <p class='text-muted mb-0'>–¢–æ–≤–∞—Ä–æ–≤</p>
                            <small class="text-success">ü§ñ –ò–ò —É–ª—É—á—à–µ–Ω–Ω—ã—Ö: <?= round($stats['total_products'] * 0.7) ?></small>
                        </div>
                    </div>
                </div>
                <div class='col-xl-3 col-md-6 mb-4'>
                    <div class='card stat-card h-100'>
                        <div class='card-body text-center'>
                            <div class='stat-icon bg-gradient-success mx-auto'>
                                <i class='fas fa-tags'></i>
                            </div>
                            <h3 class='text-dark'><?= $stats['total_categories'] ?></h3>
                            <p class='text-muted mb-0'>–ö–∞—Ç–µ–≥–æ—Ä–∏–π</p>
                            <small class="text-info">üß† –° –ò–ò –∑–Ω–∞–Ω–∏—è–º–∏</small>
                        </div>
                    </div>
                </div>
                <div class='col-xl-3 col-md-6 mb-4'>
                    <div class='card stat-card h-100'>
                        <div class='card-body text-center'>
                            <div class='stat-icon bg-gradient-info mx-auto'>
                                <i class='fas fa-shopping-cart'></i>
                            </div>
                            <h3 class='text-dark'><?= $stats['total_orders'] ?></h3>
                            <p class='text-muted mb-0'>–ó–∞–∫–∞–∑–æ–≤</p>
                            <small class="text-warning">üìä –ò–ò –∞–Ω–∞–ª–∏–∑ –∞–∫—Ç–∏–≤–µ–Ω</small>
                        </div>
                    </div>
                </div>
                <div class='col-xl-3 col-md-6 mb-4'>
                    <div class='card stat-card h-100'>
                        <div class='card-body text-center'>
                            <div class='stat-icon bg-gradient-ai mx-auto'>
                                <i class='fas fa-robot'></i>
                            </div>
                            <h3 class='text-dark'><?= $aiStats['total_generations'] ?></h3>
                            <p class='text-muted mb-0'>–ò–ò –ì–µ–Ω–µ—Ä–∞—Ü–∏–π</p>
                            <small class="text-success">–£—Å–ø–µ—à–Ω–æ—Å—Ç—å: <?= round(($aiStats['successful_generations'] / max($aiStats['total_generations'], 1)) * 100, 1) ?>%</small>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Actions —Å –ò–ò -->
            <div class='content-card'>
                <h4 class='mb-4'>üöÄ –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h4>
                <div class='row'>
                    <div class='col-md-2 mb-3'>
                        <a href='?page=add_product' class='btn btn-primary w-100 py-3'>
                            <i class='fas fa-plus d-block mb-2' style='font-size: 2rem;'></i>
                            –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä
                            <small class="d-block mt-1">—Å –ò–ò –ø–æ–º–æ—â—å—é</small>
                        </a>
                    </div>
                    <div class='col-md-2 mb-3'>
                        <a href='?page=product_editor' class='btn btn-success w-100 py-3'>
                            <i class='fas fa-edit d-block mb-2' style='font-size: 2rem;'></i>
                            –†–µ–¥–∞–∫—Ç–æ—Ä —Ç–æ–≤–∞—Ä–æ–≤
                        </a>
                    </div>
                    <div class='col-md-2 mb-3'>
                        <a href='?page=orders' class='btn btn-info w-100 py-3'>
                            <i class='fas fa-list d-block mb-2' style='font-size: 2rem;'></i>
                            –ó–∞–∫–∞–∑—ã
                        </a>
                    </div>
                    <div class='col-md-2 mb-3'>
                        <a href='?page=products' class='btn btn-warning w-100 py-3'>
                            <i class='fas fa-fish d-block mb-2' style='font-size: 2rem;'></i>
                            –í—Å–µ —Ç–æ–≤–∞—Ä—ã
                        </a>
                    </div>
                    <div class='col-md-2 mb-3'>
                        <a href='?page=statistics' class='btn btn-secondary w-100 py-3'>
                            <i class='fas fa-chart-bar d-block mb-2' style='font-size: 2rem;'></i>
                            –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
                        </a>
                    </div>
                    <div class='col-md-2 mb-3'>
                        <a href='?page=ai_dashboard' class='btn w-100 py-3' style='background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white;'>
                            <i class='fas fa-robot d-block mb-2' style='font-size: 2rem;'></i>
                            ü§ñ –ò–ò –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
                            <small class="d-block mt-1">–ø–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞</small>
                        </a>
                    </div>
                </div>
            </div>

            <?php if ($page !== 'dashboard'): ?>
                <div class='alert alert-warning mt-4'>
                    <i class='fas fa-exclamation-triangle me-2'></i>
                    <strong>–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞:</strong> –§–∞–π–ª <code><?= htmlspecialchars($pageFile) ?></code> –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.
                    <br>–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª –≤ –ø–∞–ø–∫–µ <code>admin/pages/</code> –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã.
                </div>
            <?php endif; ?>
            <?php
        }
        ?>
    </div>

    <script src='https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js'></script>
    <script>
        // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–∞–π–¥–±–∞—Ä–∞ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
        function toggleSidebar() {
            const sidebar = document.getElementById('sidebar');
            sidebar.classList.toggle('show');
        }

        // –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–∞–π–¥–±–∞—Ä–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
        document.addEventListener('click', function(event) {
            const sidebar = document.getElementById('sidebar');
            const toggleBtn = event.target.closest('[onclick="toggleSidebar()"]');

            if (!sidebar.contains(event.target) && !toggleBtn && window.innerWidth <= 768) {
                sidebar.classList.remove('show');
            }
        });

        // ========== –ò–ò –§–£–ù–ö–¶–ò–ò ==========

        // –≠–∫—Å–ø–æ—Ä—Ç –ò–ò –¥–∞–Ω–Ω—ã—Ö
        async function exportAIData() {
            try {
                showNotification('ü§ñ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ò–ò –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞...', 'info');

                const formData = new FormData();
                formData.append('action', 'export_ai_data');

                const response = await fetch('', {
                    method: 'POST',
                    body: formData
                });

                if (response.ok) {
                    const blob = await response.blob();
                    const url = window.URL.createObjectURL(blob);
                    const a = document.createElement('a');
                    a.href = url;
                    a.download = `ai_learning_export_${new Date().toISOString().split('T')[0]}.json`;
                    document.body.appendChild(a);
                    a.click();
                    document.body.removeChild(a);
                    window.URL.revokeObjectURL(url);

                    showNotification('‚úÖ –î–∞–Ω–Ω—ã–µ –ò–ò —É—Å–ø–µ—à–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã!', 'success');
                } else {
                    throw new Error('–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞');
                }
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –ò–ò:', error);
                showNotification('‚ùå –û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –ò–ò', 'error');
            }
        }

        // –ò–º–ø–æ—Ä—Ç –ò–ò –¥–∞–Ω–Ω—ã—Ö
        async function importAIData() {
            const fileInput = document.getElementById('aiFileInput');

            if (!fileInput.files.length) {
                showNotification('‚ùå –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞!', 'warning');
                return;
            }

            try {
                showNotification('ü§ñ –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –ò–ò...', 'info');

                const formData = new FormData();
                formData.append('action', 'import_ai_data');
                formData.append('ai_file', fileInput.files[0]);

                const response = await fetch('', {
                    method: 'POST',
                    body: formData
                });

                const result = await response.json();

                if (result.success) {
                    showNotification('‚úÖ ' + result.message, 'success');
                    setTimeout(() => location.reload(), 2000);
                } else {
                    showNotification('‚ùå ' + result.message, 'error');
                }
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –ò–ò:', error);
                showNotification('‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –ò–ò', 'error');
            }
        }

        // –°–±—Ä–æ—Å –ò–ò –¥–∞–Ω–Ω—ã—Ö
        function confirmResetAI() {
            if (confirm('‚ö†Ô∏è –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï!\n\n–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –ü–û–õ–ù–û–°–¢–¨–Æ –°–ë–†–û–°–ò–¢–¨ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –æ–±—É—á–µ–Ω–∏—è –ò–ò?\n\n–≠—Ç–æ –ø—Ä–∏–≤–µ–¥–µ—Ç –∫:\n‚ùå –ü–æ—Ç–µ—Ä–µ –≤—Å–µ—Ö –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã—Ö –∑–Ω–∞–Ω–∏–π\n‚ùå –°–Ω–∏–∂–µ–Ω–∏—é –∫–∞—á–µ—Å—Ç–≤–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏\n‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–µ—Ä–µ–æ–±—É—á–µ–Ω–∏—è\n\n–î–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –ù–ï–û–ë–†–ê–¢–ò–ú–û!\n\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å?')) {
                if (confirm('üö® –ü–û–°–õ–ï–î–ù–ï–ï –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï!\n\n–í—ã –∞–±—Å–æ–ª—é—Ç–Ω–æ —É–≤–µ—Ä–µ–Ω—ã?\n–í—Å–µ –¥–∞–Ω–Ω—ã–µ –ò–ò –±—É–¥—É—Ç –±–µ–∑–≤–æ–∑–≤—Ä–∞—Ç–Ω–æ —É—Ç–µ—Ä—è–Ω—ã!\n\n–ü–û–î–¢–í–ï–†–î–ò–¢–ï –û–ö–û–ù–ß–ê–¢–ï–õ–¨–ù–û:')) {
                    resetAIData();
                }
            }
        }

        async function resetAIData() {
            try {
                showNotification('ü§ñ –°–±—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –æ–±—É—á–µ–Ω–∏—è –ò–ò...', 'warning');

                const formData = new FormData();
                formData.append('action', 'reset_ai_data');

                const response = await fetch('', {
                    method: 'POST',
                    body: formData
                });

                const result = await response.json();

                if (result.success) {
                    showNotification('‚úÖ ' + result.message, 'success');
                    setTimeout(() => location.reload(), 3000);
                } else {
                    showNotification('‚ùå ' + result.message, 'error');
                }
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –ò–ò:', error);
                showNotification('‚ùå –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö –ò–ò', 'error');
            }
        }

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ò–ò
        async function refreshAIStats() {
            try {
                showNotification('ü§ñ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ò–ò...', 'info');

                const formData = new FormData();
                formData.append('action', 'get_ai_stats');

                const response = await fetch('', {
                    method: 'POST',
                    body: formData
                });

                const result = await response.json();

                if (result.success) {
                    showNotification('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ò–ò –æ–±–Ω–æ–≤–ª–µ–Ω–∞!', 'success');
                    setTimeout(() => location.reload(), 1000);
                } else {
                    showNotification('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏', 'error');
                }
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ò–ò:', error);
                showNotification('‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ò–ò', 'error');
            }
        }

        // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π
        function toggleKnowledgeBase() {
            const details = document.getElementById('knowledgeBaseDetails');
            const isVisible = details.style.display !== 'none';

            details.style.display = isVisible ? 'none' : 'block';

            const btn = event.target.closest('button');
            btn.innerHTML = isVisible ? 
                '<i class="fas fa-eye me-1"></i>–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏' : 
                '<i class="fas fa-eye-slash me-1"></i>–°–∫—Ä—ã—Ç—å –¥–µ—Ç–∞–ª–∏';
        }

        // ========== –û–†–ò–ì–ò–ù–ê–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ==========

        // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∞–¥–º–∏–Ω–∫–∏
        async function deleteItem(type, id) {
            const messages = {
                product: '—Ç–æ–≤–∞—Ä',
                category: '–∫–∞—Ç–µ–≥–æ—Ä–∏—é',
                order: '–∑–∞–∫–∞–∑'
            };

            if (!confirm(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç ${messages[type] || '—ç–ª–µ–º–µ–Ω—Ç'}?`)) {
                return;
            }

            try {
                const formData = new FormData();
                formData.append('action', `delete_${type}`);
                formData.append('id', id);

                const response = await fetch('', {
                    method: 'POST',
                    body: formData
                });

                const result = await response.json();

                if (result.success) {
                    showNotification(result.message, 'success');
                    setTimeout(() => location.reload(), 1000);
                } else {
                    showNotification(result.message, 'error');
                }

            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è:', error);
                showNotification('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è', 'error');
            }
        }

        // –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
        function deleteProduct(id) {
            deleteItem('product', id);
        }

        // –£–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        function deleteCategory(id) {
            deleteItem('category', id);
        }

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞
        async function updateOrderStatus(id, status) {
            try {
                const formData = new FormData();
                formData.append('action', 'update_order_status');
                formData.append('id', id);
                formData.append('status', status);

                const response = await fetch('', {
                    method: 'POST',
                    body: formData
                });

                const result = await response.json();

                if (result.success) {
                    showNotification(result.message, 'success');
                    setTimeout(() => location.reload(), 1000);
                } else {
                    showNotification(result.message, 'error');
                }

            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞:', error);
                showNotification('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞', 'error');
            }
        }

        // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        function showNotification(message, type = 'success') {
            const alertClass = type === 'success' ? 'alert-success' : 
                             type === 'error' ? 'alert-danger' : 
                             type === 'warning' ? 'alert-warning' : 'alert-info';

            const icon = type === 'success' ? 'fas fa-check-circle' : 
                        type === 'error' ? 'fas fa-exclamation-circle' :
                        type === 'warning' ? 'fas fa-exclamation-triangle' : 'fas fa-info-circle';

            const notification = document.createElement('div');
            notification.className = `alert ${alertClass} alert-dismissible fade show position-fixed`;
            notification.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px; box-shadow: 0 4px 15px rgba(0,0,0,0.2);';
            notification.innerHTML = `
                <i class='${icon} me-2'></i>${message}
                <button type='button' class='btn-close' data-bs-dismiss='alert'></button>
            `;

            document.body.appendChild(notification);

            setTimeout(() => {
                if (notification.parentNode) {
                    notification.remove();
                }
            }, 5000);
        }

        // –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ò–ò –∫–∞–∂–¥—ã–µ 60 —Å–µ–∫—É–Ω–¥
        setInterval(function() {
            if (window.location.search.includes('ai_dashboard')) {
                console.log('ü§ñ –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ò–ò...');
                // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ç–∏—Ö–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –±–µ–∑ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏
            }
        }, 60000);

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
        document.addEventListener('DOMContentLoaded', function() {
            console.log('ü§ñ –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –ê–∫–≤–∞–°–±–æ—Ä —Å –ò–ò –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
            console.log('üìä –ò–ò —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:', <?= json_encode($aiStats) ?>);
            console.log('‚ö° –ò–ò –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:', <?= json_encode($performanceData) ?>);
        });
    </script>
</body>
</html>
